rate
nper
pmt
pv
type
pv
debugSource('~/R/myFunctions.R')
testResults=investmentResults(investor)
type
pmt
pv
testResults=investmentResults(investor)
income_401K[n,h]
actual_401K_income
salary[n,h]
test=FV(.01,10,0,-100)
test
test=FV(.01,10,-10,-100)
test
test=FV(.01,10,-10,-100,1)
test
test[2,1]=3
test[1,1]=4
test[1]=4
test
test[1]=FV(.01,10,-10,-50,1)
test
test[1]=FV(.01,10,-10,-50/.5,1)
test
test[1]=FV(.01,10,-10,-1*investor$startingSalary,1)
test[1]=FV(.01,10,-10,-1*investor$starting_salary,1)
test
print("test",c)
paste("test","tew")
paste("test","tew",500)
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
print(paste("test","tew",500))
source('~/R/myFunctions.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
debugSource('~/R/myFunctions.R')
source('~/R/myScript.R')
testResults=investmentResults(investor)
debugSource('~/R/myFunctions.R')
testResults=investmentResults(investor)
print(n)
debugSource('~/R/myFunctions.R')
source('~/R/myScript.R')
testResults=investmentResults(investor)
print(n)
for(n in 1:3+4){}
for(n in 1:3+4){print(n)}
for(n in 1:(3+4){print(n)}
for(n in 1:(3+4)){print(n)}
source('~/R/myFunctions.R')
testResults=investmentResults(investor)
plot(testResults$age,testResults$balance_401K+testResults$balance_IRA)
plot(testResults$age,testResults$balance_401K+testResults$balance_IRA)
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
plotData <- data.frame(testResults$age,testResults$balance_401K,testResults$balance_IRA)
plotData <- data.frame(age=testResults$age,bal_401=testResults$balance_401K,bal_IRA=testResults$balance_IRA)
plotData <- data.frame(age=testResults$age,
balance_401K=testResults$balance_401K,
balance_IRA=testResults$balance_IRA
total=testResults$balance_401K+testResults$balance_IRA)
plotData <- data.frame(age=testResults$age,bal_401=testResults$balance_401K,bal_IRA=testResults$balance_IRA,tot=testResults$balance_401K+testResults$balance_IRA)
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
source('~/R/myScript.R')
debugSource('~/R/myScript.R')
print(newPlotData)
source('~/R/myScript.R')
qplot(age,value,newPlotData)
qplot(age,value,data=newPlotData)
qplot(age,value,data=newPlotData,geom="line")
qplot(age,value,data=newPlotData,geom="line",color=account)
qplot(age,value,data=newPlotData,geom="line",color=Account)
qplot(age,value,data=newPlotData,geom="line",color=Account,main="What")
qplot(age,value,data=newPlotData,geom="line",color=Account,main="What",size=I(1.5))
source('~/R/myScript.R')
source('~/R/myScript.R')
qplot(age,value,data=newPlotData,geom="line",color=Account,main="What",size=I(1.5))
source('~/R/myScript.R')
library(ggplot2)
library(reshape)
source("myFunctions.R")
a=1:5
b=2:6
c=3:7
data <- data.frame(a,b,c)
data["a"]
investor=list()
#Starting Values
investor$starting_year=2014;
investor$starting_age=35;
investor$starting_401K=50000;
investor$starting_IRA=10000;
investor$years_till_retirement=25;
investor$years_in_retirement=50;
#Inflation
investor$inflation=0.025;
#Salary
investor$starting_salary=90000;
investor$salary_yearly_change=0.02;
investor$pay_period_wks=2;
#Taxes
investor$tax_rate=0.24;
#401K
investor$contribution_401K_pct=0.1;
investor$match_401K_pct=0.05;
investor$trad_or_roth_401K=1;   #1=trad 2=roth
#IRA
investor$IRA_annual_contribution=5500;
investor$IRA_contribution_value_year=2014;
investor$trad_or_roth_IRA=2;   #1=trad 2=roth
#SS
investor$social_security_monthly=1500;
investor$social_security_value_year=2014;
investor$social_security_age=67;
investor$social_security_bridge=0;   #0=no 1=yes
#Pension
investor$pension_monthly_benefit=0;
investor$pension_value_year=2014;
investor$pension_age=62;
investor$pension_yearly_change=0.02;
#Investment Performance
investor$average_annual_return_pre=0.07;
investor$average_annual_return_post=0.04;
#Retirement Income
investor$retirement_income=50000;
investor$retirement_income_value_year=2014;
investor$retirement_withdrawl_pct=0.005;
investor$percent_IRA_distribution=0.0;
investor$comparison_year=2014;
#Backtest?
investor$backtest=0; #0=no, 1=yes
investor$stock_exposure_pre=0.75;
investor$stock_exposure_post=0.5;
testResults=investmentResults(investor)
# plot(testResults$age,testResults$balance_401K+testResults$balance_IRA)
plotData <- data.frame(age=testResults$age,
balance_401K=testResults$balance_401K,
balance_IRA=testResults$balance_IRA,
total=testResults$balance_401K+testResults$balance_IRA)
newPlotData=melt(plotData,id='age',variable_name='Account')
qplot(age,value,data=newPlotData,geom="line",color=Account,main="APlot",size=I(1.5))
# qplot(year,value,data=newdata,geom="line",color=Action,main=title,size=I(1.5))
library(ggplot2)
library(reshape)
source("myFunctions.R")
a=1:5
b=2:6
c=3:7
data <- data.frame(a,b,c)
data["a"]
investor=list()
#Starting Values
investor$starting_year=2014;
investor$starting_age=35;
investor$starting_401K=50000;
investor$starting_IRA=10000;
investor$years_till_retirement=25;
investor$years_in_retirement=50;
#Inflation
investor$inflation=0.025;
#Salary
investor$starting_salary=90000;
investor$salary_yearly_change=0.02;
investor$pay_period_wks=2;
#Taxes
investor$tax_rate=0.24;
#401K
investor$contribution_401K_pct=0.1;
investor$match_401K_pct=0.05;
investor$trad_or_roth_401K=1;   #1=trad 2=roth
#IRA
investor$IRA_annual_contribution=5500;
investor$IRA_contribution_value_year=2014;
investor$trad_or_roth_IRA=2;   #1=trad 2=roth
#SS
investor$social_security_monthly=1500;
investor$social_security_value_year=2014;
investor$social_security_age=67;
investor$social_security_bridge=0;   #0=no 1=yes
#Pension
investor$pension_monthly_benefit=0;
investor$pension_value_year=2014;
investor$pension_age=62;
investor$pension_yearly_change=0.02;
#Investment Performance
investor$average_annual_return_pre=0.07;
investor$average_annual_return_post=0.04;
#Retirement Income
investor$retirement_income=50000;
investor$retirement_income_value_year=2014;
investor$retirement_withdrawl_pct=0.005;
investor$percent_IRA_distribution=0.0;
investor$comparison_year=2014;
#Backtest?
investor$backtest=0; #0=no, 1=yes
investor$stock_exposure_pre=0.75;
investor$stock_exposure_post=0.5;
testResults=investmentResults(investor)
# plot(testResults$age,testResults$balance_401K+testResults$balance_IRA)
plotBalance <- data.frame(age=testResults$age,
balance_401K=testResults$balance_401K,
balance_IRA=testResults$balance_IRA,
total=testResults$balance_401K+testResults$balance_IRA)
newPlotBalance=melt(plotBalance,id='age',variable_name='Account')
plotIncome <- data.frame(age=testResults$age,
income_PV=testResults$income_PV,
income_after_tax_PV=testResults$income_after_tax_PV)
newPlotIncome=melt(plotIncome,id='age',variable_name='Type')
qplot(age,value,data=newPlotBalance,geom="line",color=Account,main="APlot",size=I(1.5))
qplot(age,value,data=newPlotIncome,geom="line",color=Type,main="APlot",size=I(1.5))
library(ggplot2)
library(reshape)
source("myFunctions.R")
a=1:5
b=2:6
c=3:7
data <- data.frame(a,b,c)
data["a"]
investor=list()
#Starting Values
investor$starting_year=2014;
investor$starting_age=35;
investor$starting_401K=50000;
investor$starting_IRA=10000;
investor$years_till_retirement=25;
investor$years_in_retirement=50;
#Inflation
investor$inflation=0.025;
#Salary
investor$starting_salary=90000;
investor$salary_yearly_change=0.02;
investor$pay_period_wks=2;
#Taxes
investor$tax_rate=0.24;
#401K
investor$contribution_401K_pct=0.1;
investor$match_401K_pct=0.05;
investor$trad_or_roth_401K=1;   #1=trad 2=roth
#IRA
investor$IRA_annual_contribution=5500;
investor$IRA_contribution_value_year=2014;
investor$trad_or_roth_IRA=2;   #1=trad 2=roth
#SS
investor$social_security_monthly=1500;
investor$social_security_value_year=2014;
investor$social_security_age=67;
investor$social_security_bridge=0;   #0=no 1=yes
#Pension
investor$pension_monthly_benefit=0;
investor$pension_value_year=2014;
investor$pension_age=62;
investor$pension_yearly_change=0.02;
#Investment Performance
investor$average_annual_return_pre=0.07;
investor$average_annual_return_post=0.04;
#Retirement Income
investor$retirement_income=50000;
investor$retirement_income_value_year=2014;
investor$retirement_withdrawl_pct=0.005;
investor$percent_IRA_distribution=0.0;
investor$comparison_year=2014;
#Backtest?
investor$backtest=0; #0=no, 1=yes
investor$stock_exposure_pre=0.75;
investor$stock_exposure_post=0.5;
testResults=investmentResults(investor)
# plot(testResults$age,testResults$balance_401K+testResults$balance_IRA)
plotBalance <- data.frame(Age=testResults$age,
balance_401K=testResults$balance_401K,
balance_IRA=testResults$balance_IRA,
total=testResults$balance_401K+testResults$balance_IRA)
newPlotBalance=melt(plotBalance,id='age',variable_name='Account')
plotIncome <- data.frame(Age=testResults$age,
Gross=testResults$income_PV,
Post_Tax=testResults$income_after_tax_PV)
newPlotIncome=melt(plotIncome,id='age',variable_name='Type')
qplot(Age,value,data=newPlotBalance,geom="line",color=Account,main="Account Balances",size=I(1.5))
qplot(Age,value,data=newPlotIncome,geom="line",color=Type,main="Income in Present Purchasing Power",size=I(1.5))
library(ggplot2)
library(reshape)
source("myFunctions.R")
a=1:5
b=2:6
c=3:7
data <- data.frame(a,b,c)
data["a"]
investor=list()
#Starting Values
investor$starting_year=2014;
investor$starting_age=35;
investor$starting_401K=50000;
investor$starting_IRA=10000;
investor$years_till_retirement=25;
investor$years_in_retirement=50;
#Inflation
investor$inflation=0.025;
#Salary
investor$starting_salary=90000;
investor$salary_yearly_change=0.02;
investor$pay_period_wks=2;
#Taxes
investor$tax_rate=0.24;
#401K
investor$contribution_401K_pct=0.1;
investor$match_401K_pct=0.05;
investor$trad_or_roth_401K=1;   #1=trad 2=roth
#IRA
investor$IRA_annual_contribution=5500;
investor$IRA_contribution_value_year=2014;
investor$trad_or_roth_IRA=2;   #1=trad 2=roth
#SS
investor$social_security_monthly=1500;
investor$social_security_value_year=2014;
investor$social_security_age=67;
investor$social_security_bridge=0;   #0=no 1=yes
#Pension
investor$pension_monthly_benefit=0;
investor$pension_value_year=2014;
investor$pension_age=62;
investor$pension_yearly_change=0.02;
#Investment Performance
investor$average_annual_return_pre=0.07;
investor$average_annual_return_post=0.04;
#Retirement Income
investor$retirement_income=50000;
investor$retirement_income_value_year=2014;
investor$retirement_withdrawl_pct=0.005;
investor$percent_IRA_distribution=0.0;
investor$comparison_year=2014;
#Backtest?
investor$backtest=0; #0=no, 1=yes
investor$stock_exposure_pre=0.75;
investor$stock_exposure_post=0.5;
testResults=investmentResults(investor)
# plot(testResults$age,testResults$balance_401K+testResults$balance_IRA)
plotBalance <- data.frame(Age=testResults$age,
balance_401K=testResults$balance_401K,
balance_IRA=testResults$balance_IRA,
total=testResults$balance_401K+testResults$balance_IRA)
newPlotBalance=melt(plotBalance,id='Age',variable_name='Account')
plotIncome <- data.frame(Age=testResults$age,
Gross=testResults$income_PV,
Post_Tax=testResults$income_after_tax_PV)
newPlotIncome=melt(plotIncome,id='Age',variable_name='Type')
qplot(Age,value,data=newPlotBalance,geom="line",color=Account,main="Account Balances",size=I(1.5))
qplot(Age,value,data=newPlotIncome,geom="line",color=Type,main="Income in Present Purchasing Power",size=I(1.5))
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
newdata=data.frame(Age=test$age,Bal_401K=test$balance_401K)
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
library(shiny)
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
library(shiny)
runApp()
library(shiny)
runApp("App-1")
deployApp("App-1")
library(shinyapps)
deployApp("App-1")
shiny::runApp('App-1')
shiny::runApp('App-1')
somezeros=vector(length=10)
somezeros
somezeros=vector("numeric",length=10)
somezeros
x <- list(2, "a", "b", TRUE)
a
x
x <- 1:4
y <- 2
x+y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x >= 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
R.version.string
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,.5)
seq(0,10,by=.5)
my_seq=seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(.5,55.-10,6)
num_vect <- c(0.5,55.-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect>=6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name=c(my_char,"Bryan")
my_name
paste(my_char,collapse=" ")
paste(my_name,collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("x","y","z"),sep="")
paste(seq(1,3),c("x","y","z"),sep="")
paste(1:3,c("x","y","z"),sep="")
paste(1:3, c("x", "y", "z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
bye()
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
deployApp("App-1")
library(shinyapps)
deployApp("App-1")
a=1
b=3
c=list(a=a,b=b,new=b)
c
new=list(a,b)
new
source('~/R/Github/FlightEnvelope/stdatm.R')
source('~/R/Github/FlightEnvelope/stdatm.R')
data=stdatm(0)
data
source('~/R/Github/FlightEnvelope/VN_Script.R')
wd
pwd
ls
setwd("~/R/Github/FlightEnvelope")
source('~/R/Github/FlightEnvelope/VN_Script.R')
shiny::runApp('FlightEnvelopeApp')
shiny::runApp('FlightEnvelopeApp')
shiny::runApp('FlightEnvelopeApp')
0.08 * 180 / pi
shiny::runApp('FlightEnvelopeApp')
shiny::runApp('FlightEnvelopeApp')
setwd("~/R/Github/FlightEnvelope/FlightEnvelopeApp")
runApp()
setwd("~/R/Github/FlightEnvelope")
runApp("FlightEnvelopeApp")
deployApp("FlightEnvelopeApp")
library(shinyapps)
runApp()
runApp("FlightEnvelopeApp")
deployApp("FlightEnvelopeApp")
